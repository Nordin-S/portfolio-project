name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Install Node.js dependencies
        run: |
          cd frontend
          npm install

      - name: Build React app
        run: |
          cd frontend
          npm run build

      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} '
            mkdir -p /home/${USER}/portfolio/backend
            mkdir -p /home/${USER}/portfolio/frontend
            echo "Directories created."
          '

          echo "Copying backend files..."
          scp -i private_key -o StrictHostKeyChecking=no -r backend/* ${USER}@${HOST}:/home/${USER}/portfolio/backend/
          
          echo "Copying frontend files (excluding node_modules)..."
          tar --exclude='./frontend/node_modules' -czf frontend.tar.gz frontend
          scp -i private_key -o StrictHostKeyChecking=no frontend.tar.gz ${USER}@${HOST}:/home/${USER}/portfolio/
          ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} '
            cd /home/${USER}/portfolio &&
            tar -xzf frontend.tar.gz &&
            rm frontend.tar.gz
          '
          echo "Copying docker-compose.yml..."
          scp -i private_key -o StrictHostKeyChecking=no docker-compose.yml ${USER}@${HOST}:/home/${USER}/portfolio/

          echo "Running commands on EC2"
          ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} '
            cd /home/${USER}/portfolio &&
            echo "Current directory: $(pwd)"
            echo "Contents of current directory:"
            ls -la
            echo "Contents of backend directory:"
            ls -la backend
            echo "Contents of frontend directory:"
            ls -la frontend
            echo "Docker version:"
            docker --version
            echo "Docker Compose version:"
            docker-compose --version
            echo "Running docker-compose down..."
            docker-compose down && echo "Running docker-compose up -d --build..."
            docker-compose up -d --build
          '
          
          echo "Deployment script completed.03"
